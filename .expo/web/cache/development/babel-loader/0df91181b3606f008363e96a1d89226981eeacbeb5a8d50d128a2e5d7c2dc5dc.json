{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeCamera = _interopRequireDefault(require(\"react-native-camera\"));\nvar _reactNativeQrcodeSvg = _interopRequireDefault(require(\"react-native-qrcode-svg\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\u0430\\u043C\\u0430\\u0440\\\\Desktop\\\\pw_native-main\\\\QRCodeScreen.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar QRCodeScreen = function QRCodeScreen() {\n  var _useState = (0, _react.useState)(''),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    qrCodeContent = _useState2[0],\n    setQRCodeContent = _useState2[1];\n  var _useState3 = (0, _react.useState)(false),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    isScannerOpen = _useState4[0],\n    setIsScannerOpen = _useState4[1];\n  var handleQRCodeScan = function handleQRCodeScan(event) {\n    if (event.data) {\n      setQRCodeContent(event.data);\n      setIsScannerOpen(false);\n    }\n  };\n  var renderScanner = function renderScanner() {\n    return (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: styles.container,\n      children: (0, _jsxRuntime.jsx)(_reactNativeCamera.default, {\n        onRead: handleQRCodeScan,\n        showMarker: true,\n        reactivate: true,\n        reactivateTimeout: 5000,\n        markerStyle: styles.markerStyle,\n        cameraStyle: styles.cameraStyle\n      })\n    });\n  };\n  var renderQRCodeGenerator = function renderQRCodeGenerator() {\n    return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: styles.container,\n      children: [(0, _jsxRuntime.jsx)(_reactNativeQrcodeSvg.default, {\n        value: qrCodeContent,\n        size: 250,\n        backgroundColor: \"white\",\n        color: \"black\"\n      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: styles.contentText,\n        children: qrCodeContent\n      })]\n    });\n  };\n  return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n    style: styles.container,\n    children: [isScannerOpen ? renderScanner() : renderQRCodeGenerator(), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return setIsScannerOpen(!isScannerOpen);\n      },\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: styles.buttonText,\n        children: isScannerOpen ? 'Generate QR Code' : 'Open Scanner'\n      })\n    })]\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  markerStyle: {\n    borderColor: '#FFF',\n    borderRadius: 10,\n    borderWidth: 2\n  },\n  cameraStyle: {\n    height: 300,\n    width: 300\n  },\n  contentText: {\n    marginTop: 10,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  button: {\n    backgroundColor: 'blue',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginTop: 20,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nvar _default = QRCodeScreen;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativeCamera","_interopRequireDefault","_reactNativeQrcodeSvg","_jsxRuntime","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","QRCodeScreen","_useState","useState","_useState2","_slicedToArray2","qrCodeContent","setQRCodeContent","_useState3","_useState4","isScannerOpen","setIsScannerOpen","handleQRCodeScan","event","data","renderScanner","jsx","View","style","styles","container","children","onRead","showMarker","reactivate","reactivateTimeout","markerStyle","cameraStyle","renderQRCodeGenerator","jsxs","value","size","backgroundColor","color","Text","contentText","TouchableOpacity","button","onPress","buttonText","StyleSheet","create","flex","alignItems","justifyContent","borderColor","borderRadius","borderWidth","height","width","marginTop","fontSize","fontWeight","paddingHorizontal","paddingVertical","_default","exports"],"sources":["C:/Users/амар/Desktop/pw_native-main/QRCodeScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport QRCodeScanner from 'react-native-camera';\nimport QRCode from 'react-native-qrcode-svg';\n\nconst QRCodeScreen = () => {\n    const [qrCodeContent, setQRCodeContent] = useState('');\n    const [isScannerOpen, setIsScannerOpen] = useState(false);\n  \n    const handleQRCodeScan = (event) => {\n      if (event.data) {\n        setQRCodeContent(event.data);\n        setIsScannerOpen(false);\n      }\n    };\n  \n    const renderScanner = () => {\n      return (\n        <View style={styles.container}>\n          <QRCodeScanner\n            onRead={handleQRCodeScan}\n            showMarker={true}\n            reactivate={true}\n            reactivateTimeout={5000}\n            markerStyle={styles.markerStyle}\n            cameraStyle={styles.cameraStyle}\n          />\n        </View>\n      );\n    };\n  \n    const renderQRCodeGenerator = () => {\n      return (\n        <View style={styles.container}>\n          <QRCode\n            value={qrCodeContent}\n            size={250}\n            backgroundColor=\"white\"\n            color=\"black\"\n          />\n          <Text style={styles.contentText}>{qrCodeContent}</Text>\n        </View>\n      );\n    };\n  \n    return (\n      <View style={styles.container}>\n        {isScannerOpen ? renderScanner() : renderQRCodeGenerator()}\n  \n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => setIsScannerOpen(!isScannerOpen)}\n        >\n          <Text style={styles.buttonText}>\n            {isScannerOpen ? 'Generate QR Code' : 'Open Scanner'}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    markerStyle: {\n      borderColor: '#FFF',\n      borderRadius: 10,\n      borderWidth: 2,\n    },\n    cameraStyle: {\n      height: 300,\n      width: 300,\n    },\n    contentText: {\n      marginTop: 10,\n      fontSize: 16,\n      fontWeight: 'bold',\n    },\n    button: {\n      backgroundColor: 'blue',\n      paddingHorizontal: 20,\n      paddingVertical: 10,\n      marginTop: 20,\n      borderRadius: 5,\n    },\n    buttonText: {\n      color: 'white',\n      fontSize: 16,\n      fontWeight: 'bold',\n    },\n  });\n  \n  export default QRCodeScreen;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}